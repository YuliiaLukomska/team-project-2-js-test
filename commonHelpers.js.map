{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst filterButtons = document.querySelector('.filter-buttons');\nconst exerciseFiltersList = document.querySelector('.exercise-filters-list');\nconst ExercisesHead = document.querySelector('.ExercisesHead');\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nconst filterValueDefault = 'Muscles';\n\nconst pagination = document.querySelector('.pagination');\nlet currentPage = 1;\nlet screenWidth = window.innerWidth;\nlet currentLimit = 0;\nlet filterValue;\nlet nameValue;\n\n// на div з кнопками вішаємо слухача\nfilterButtons.addEventListener('click', filterBtnClick);\n\nasync function filterBtnClick(event) {\n  // preventDefault напево нетреба (нема посилань і сабміту)\n  event.preventDefault();\n  // тут посилання на ДОМ-ел на який клікнули\n  const filterValue = event.target;\n  // дістаємо значення дата-атрибута елемента, на який клацнули\n  const qwer = filterValue.dataset.filter;\n  // чому робиш пустим ul при виклику функції?\n  // exerciseFiltersList.innerHTML = '';\n  console.log(qwer);\n  // tagName чи nodeName?\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  try {\n    // передаємо аргументом значення дата атрибута кнопки на яку клікнули\n    getExercises(qwer).then(data => {\n      console.log(data);\n      exerciseFiltersList.innerHTML = markupExercises(data);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n// по замовчувнню значення фільтра буде 'Muscles'\nasync function getExercises(filter = filterValueDefault) {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filter,\n        page: 1,\n        limit: 12,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// функція отримує масив об'єктів\nfunction markupExercises(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class='ExercisesItem' data-filter='${filter}' data-name='${name}'>\n        <img class=\"img-exercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div>\n          <p>${name}</p>\n          <p>${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  return markup;\n  // треба іннерhtml, щоб при кліку відбувалась заміна розмітки, а не продовження\n  // exerciseFiltersList.insertAdjacentHTML('beforeend', markup);\n}\n// -------------------------------------------------------------------------------------------------------------------------------\nexerciseFiltersList.addEventListener('click', onCardClick);\n\nasync function onCardClick(event) {\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  // при кліку на картку додаємо клас до ul (бо він має інші стилі)\n  exerciseFiltersList.classList.add('ExerciseCategoryList');\n  // при кліку на картку шукаємо найближчий елемент у якого буде заданий селектор (це li)\n  const liEl = event.target.closest('.ExercisesItem');\n  // тепер можемо отримати li дата-атрибути\n  filterValue = liEl.dataset.filter; //Muscles\n  nameValue = liEl.dataset.name; // abductors\n  // передаємо ці атрибути в функцію , яка робить запит\n  try {\n    const { page, perPage, totalPages, results } = await getExercisesByFilter(\n      filterValue,\n      nameValue\n    );\n    // це буде масив об'єктів\n    console.log(results);\n    exerciseFiltersList.innerHTML = createMarkUp(results);\n    // оновлюємо хедер секції Exercises\n    ExercisesHead.innerHTML = updateExercisesHeaderMarkup(nameValue);\n    // додаємо на три кнопки фільтрів слухача по кліку--------------------------------------------------------------------------\n    const FilterBtn = document.querySelector('#FilterBtn');\n    FilterBtn.addEventListener('click', onBtnClick);\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!НОВЕ\n    if (totalPages > 1) {\n      // const pag це буде рядок розмітки кнопок(нумерація сторінок)\n      const pag = paginationPages(totalPages);\n      console.log(pag);\n      // додаємо в div розмітку сторінок\n      pagination.innerHTML = pag;\n    }\n    // else {\n    //   pagination.innerHTML = '';\n    // }\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!НОВЕ\n    // вішаємо на дів з кнопками нумерації сторінок слухача подій при кліку\n    pagination.addEventListener('click', onPaginationPages);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getExercisesByFilter(filterValue, nameValue, currentPage) {\n  // в запиті можливі три ключі, тому відповідно до значення фільтра пишемо цей ключ\n  try {\n    if (filterValue === 'Muscles') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          muscles: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    } else if (filterValue === 'Body parts') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          bodypart: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    } else {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          equipment: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createMarkUp(array) {\n  const markup = array\n    .map(({ rating, name, burnedCalories, time, bodyPart, target }) => {\n      return `<li class=\"WorkoutCard\">\n      <div class='CardHeader'>\n        <div class='WorkoutWrapper'>\n          <p class='Workout'>workout</p>\n          <div class='RatingWrapper'><p>${rating}</p>\n          <svg class='StarIcon' width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-star'></use>\n        </svg></div>\n        </div>\n        <div class='StartBtn'>\n          <p>Start</p>\n          <svg width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-arrow'></use>\n        </svg>\n        </div>\n      </div>\n      <div class='CardMainPart'>\n      <div class='RunIconWrapper'><svg width='14' height='14'>\n          <use href='./img/symbol-defs.svg#icon-running'></use>\n        </svg></div>\n        <p class='MainPartName'>${name}</p>\n      </div>\n      <ul class=\"CardFooter\">\n        <li>\n          <p class='CardFooterTextDescr'>Burned calories: <span class='CardFooterTextValue'>${burnedCalories} / ${time} min</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Body part: <span class='CardFooterTextValue'>${bodyPart}</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Target: <span class='CardFooterTextValue'>${target}</span></p>\n        </li>\n      </ul>\n    </li>`;\n    })\n    .join('');\n  return markup;\n}\n\nfunction updateExercisesHeaderMarkup(nameValue) {\n  return `<div>\n  <h2 class=\"title-exercises\">Exercises / <span class=\"NameValue\"> ${nameValue}</span></h2>\n  <div class=\"ExercisesHeared\">\n  <div class=\"list-exercises filter-buttons\" id='FilterBtn'>\n    <button class=\"item-exercises\" data-filter=\"Muscles\">Muscles</button>\n    <button class=\"item-exercises\" data-filter=\"Body parts\">Body parts</button>\n    <button class=\"item-exercises\" data-filter=\"Equipment\">Equipment</button>\n  </div>\n    <form action=\"\" class=\"ExercisesForm\">\n      <label for=\"#search\" class=\"visually-hidden\">Search</label>\n      <input class='SearchInput' name=\"search\" placeholder=\"Search\" type=\"search\" id=\"search\" />\n      <button class='SearchButton' type=\"submit\">\n        <svg class='IconSearch' width='18' height='18'>\n          <use href='./img/symbol-defs.svg#icon-search'></use>\n        </svg>\n      </button>\n    </form></div>\n</div>\n`;\n}\n// ==================================================================================================\n\n// це виклик функції Данила. Треба щоб він зробив експорт\n// функція, яка спрацбовує коли ми клікаємо по фільтру (Muscle, Body Part, Equipment)\nasync function onBtnClick(event) {\n  // робимо поточну сторінку першою\n  currentPage = 1;\n  // видаляємо з нумерації сторінок слухача попереднього\n  pagination.removeEventListener('click', onPaginationPages);\n  // pagination.addEventListener('click', onPaginationPagesbyFilter);\n  // тут видалення тексту після слеша та форми\n  const titleExercises = document.querySelector('.title-exercises');\n  titleExercises.innerHTML = 'Exercises';\n  const ExercisesForm = document.querySelector('.ExercisesForm');\n  // ?????????????????????????????????????????форма видаляється при першому кліку, а при другому знову хоче видалити, а її вже нема\n  // ExercisesForm.remove(); /////????????????????????????????????????????????????????????\n  console.log(titleExercises);\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  // дістаємо значення дата-атрибута елемента, на який клацнули\n  filterValue = event.target.dataset.filter; //muscle, body part, equipment\n\n  // чому робиш пустим ul при виклику функції?\n  // exerciseFiltersList.innerHTML = '';\n  // робимо запит по фільтру muscle, body part, equipment\n  try {\n    const { page, perPage, totalPages, results } = await getExercise(\n      filterValue\n    );\n    console.log(totalPages);\n    // робимо розмітку всередині ul по фільтру починаюxи з першої сторінки\n    exerciseFiltersList.innerHTML = markupExercise(results);\n    if (totalPages > 1) {\n      // const pag це буде рядок розмітки кнопок(нумерація сторінок)\n      const pag = paginationPages(totalPages);\n      console.log(pag);\n      // додаємо в div розмітку сторінок\n      pagination.innerHTML = pag;\n    } else {\n      pagination.innerHTML = '';\n    }\n    // else {\n    //   pagination.innerHTML = '';\n    // }\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!НОВЕ\n\n    pagination.addEventListener('click', onPaginationPagesbyFilter);\n  } catch (error) {\n    console.log(error);\n  }\n}\n// по замовчувнню значення фільтра буде 'Muscles'\nasync function getExercise(filter = filterValueDefault) {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filter,\n        page: currentPage,\n        limit: 12,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// функція отримує масив об'єктів\nfunction markupExercise(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class='ExercisesItem' data-filter='${filter}' data-name='${name}'>\n        <img class=\"img-exercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div>\n          <p>${name}</p>\n          <p>${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  return markup;\n  // треба іннерhtml, щоб при кліку відбувалась заміна розмітки, а не продовження\n  // exerciseFiltersList.insertAdjacentHTML('beforeend', markup);\n}\n// --------------------------------------------------------------------------------------\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!НОВЕ\nfunction paginationPages(totalPages) {\n  let paginationHtml = '';\n  for (let i = 1; i <= totalPages; i += 1) {\n    paginationHtml += `<button class=\"pagination-btn\" type=\"button\">${i}</button>`;\n  }\n  // в залежності від к-ті сторінок повертає таку кількість кнопок в розмітці\n  return paginationHtml;\n}\n\nasync function onPaginationPages(e) {\n  // при кліку на цифру сторінки будемо діставати цифру (текст-контент кнопки: 1, 4, 7...)\n  currentPage = e.target.textContent;\n  console.log(currentPage); // 7\n  // очищує ul з картками\n  // exerciseFiltersList.innerHTML = '';\n  try {\n    // запит на картки по фільтру\n    const { results, page, totalPages } = await getExercisesByFilter(\n      filterValue,\n      nameValue,\n      currentPage\n    );\n\n    // const filter = results[0].filter;\n\n    // if (page === totalPages) {\n    //   return;\n    // }\n    // робимо розмітку підкатегорій відповідно до номеру сторінки\n    exerciseFiltersList.innerHTML = createMarkUp(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// вішаємо слухач на дів з цифрами сторінок\n\nasync function onPaginationPagesbyFilter(e) {\n  // при кліку на цифру сторінки будемо діставати цифру (текст-контент кнопки)\n  currentPage = e.target.textContent;\n  console.log(currentPage); // 7\n  // очищує ul з картками\n  // exerciseFiltersList.innerHTML = '';\n  try {\n    // запит на картки по фільтру\n    const { results, page, totalPages } = await getExercise(\n      filterValue,\n      currentPage\n    );\n    console.log(results);\n    // const filter = results[0].filter;\n\n    // if (page === totalPages) {\n    //   return;\n    // }\n    exerciseFiltersList.innerHTML = markupExercise(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["filterButtons","exerciseFiltersList","ExercisesHead","BASE_URL","filterValueDefault","pagination","currentPage","filterValue","nameValue","filterBtnClick","event","qwer","getExercises","data","markupExercises","error","filter","axios","results","name","imgUrl","onCardClick","liEl","page","perPage","totalPages","getExercisesByFilter","createMarkUp","updateExercisesHeaderMarkup","onBtnClick","pag","paginationPages","onPaginationPages","array","rating","burnedCalories","time","bodyPart","target","titleExercises","getExercise","markupExercise","onPaginationPagesbyFilter","paginationHtml","i","e"],"mappings":"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"}