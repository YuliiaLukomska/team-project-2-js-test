{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst filterButtons = document.querySelector('.filter-buttons');\nconst exerciseFiltersList = document.querySelector('.exercise-filters-list');\nconst ExercisesHead = document.querySelector('.ExercisesHead');\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nconst filterValueDefault = 'Muscles';\n// на div з кнопками вішаємо слухача\nfilterButtons.addEventListener('click', filterBtnClick);\n\nasync function filterBtnClick(event) {\n  // preventDefault напево нетреба (нема посилань і сабміту)\n  event.preventDefault();\n  // тут посилання на ДОМ-ел на який клікнули\n  const filterValue = event.target;\n  // дістаємо значення дата-атрибута елемента, на який клацнули\n  const qwer = filterValue.dataset.filter;\n  // чому робиш пустим ul при виклику функції?\n  // exerciseFiltersList.innerHTML = '';\n  console.log(qwer);\n  // tagName чи nodeName?\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  try {\n    // передаємо аргументом значення дата атрибута кнопки на яку клікнули\n    getExercises(qwer).then(data => {\n      console.log(data);\n      exerciseFiltersList.innerHTML = markupExercises(data);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n// по замовчувнню значення фільтра буде 'Muscles'\nasync function getExercises(filter = filterValueDefault) {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filter,\n        page: 1,\n        limit: 20,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// функція отримує масив об'єктів\nfunction markupExercises(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class='ExercisesItem' data-filter='${filter}' data-name='${name}'>\n        <img class=\"img-exercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div>\n          <p>${name}</p>\n          <p>${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  return markup;\n  // треба іннерhtml, щоб при кліку відбувалась заміна розмітки, а не продовження\n  // exerciseFiltersList.insertAdjacentHTML('beforeend', markup);\n}\n// -------------------------------------------------------------------------------------------------------------------------------\nexerciseFiltersList.addEventListener('click', onCardClick);\n\nasync function onCardClick(event) {\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  // при кліку на картку додаємо клас до ul (бо він має інші стилі)\n  exerciseFiltersList.classList.add('ExerciseCategoryList');\n  // при кліку на картку шукаємо найближчий елемент у якого буде заданий селектор (це li)\n  const liEl = event.target.closest('.ExercisesItem');\n  // тепер можемо отримати li дата-атрибути\n  const filterValue = liEl.dataset.filter;\n  const nameValue = liEl.dataset.name;\n  console.log(filterValue); //Muscles\n  console.log(nameValue); // abductors\n  // передаємо ці атрибути в функцію , яка робить запит\n  try {\n    const data = await getExercisesByFilter(filterValue, nameValue);\n    // це буде масив об'єктів\n    exerciseFiltersList.innerHTML = createMarkUp(data);\n    ExercisesHead.innerHTML = updateExercisesHeaderMarkup(nameValue);\n    const FilterBtn = document.querySelector('#FilterBtn');\n    console.log(FilterBtn);\n    FilterBtn.addEventListener('click', onBtnClick);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getExercisesByFilter(filterValue, nameValue) {\n  // в запиті можливі три ключі, тому відповідно до значення фільтра пишемо цей ключ\n  try {\n    if (filterValue === 'Muscles') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          muscles: nameValue,\n        },\n      });\n      return response.data.results;\n    } else if (filterValue === 'Body parts') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          bodypart: nameValue,\n        },\n      });\n      return response.data.results;\n    } else {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          equipment: nameValue,\n        },\n      });\n      return response.data.results;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createMarkUp(array) {\n  const markup = array\n    .map(({ rating, name, burnedCalories, time, bodyPart, target }) => {\n      return `<li class=\"WorkoutCard\">\n      <div class='CardHeader'>\n        <div class='WorkoutWrapper'>\n          <p class='Workout'>workout</p>\n          <div class='RatingWrapper'><p>${rating}</p>\n          <svg class='StarIcon' width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-star'></use>\n        </svg></div>\n        </div>\n        <div class='StartBtn'>\n          <p>Start</p>\n          <svg width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-arrow'></use>\n        </svg>\n        </div>\n      </div>\n      <div class='CardMainPart'>\n      <div class='RunIconWrapper'><svg width='14' height='14'>\n          <use href='./img/symbol-defs.svg#icon-running'></use>\n        </svg></div>\n        <p class='MainPartName'>${name}</p>\n      </div>\n      <ul class=\"CardFooter\">\n        <li>\n          <p class='CardFooterTextDescr'>Burned calories: <span class='CardFooterTextValue'>${burnedCalories} / ${time} min</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Body part: <span class='CardFooterTextValue'>${bodyPart}</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Target: <span class='CardFooterTextValue'>${target}</span></p>\n        </li>\n      </ul>\n    </li>`;\n    })\n    .join('');\n  return markup;\n}\n\nfunction updateExercisesHeaderMarkup(nameValue) {\n  return `<div>\n  <h2 class=\"title-exercises\">Exercises / <span class=\"NameValue\"> ${nameValue}</span></h2>\n  <div class=\"ExercisesHeared\">\n  <div class=\"list-exercises filter-buttons\" id='FilterBtn'>\n    <button class=\"item-exercises\" data-filter=\"Muscles\">Muscles</button>\n    <button class=\"item-exercises\" data-filter=\"Body parts\">Body parts</button>\n    <button class=\"item-exercises\" data-filter=\"Equipment\">Equipment</button>\n  </div>\n    <form action=\"\" class=\"ExercisesForm\">\n      <label for=\"#search\" class=\"visually-hidden\">Search</label>\n      <input class='SearchInput' name=\"search\" placeholder=\"Search\" type=\"search\" id=\"search\" />\n      <button class='SearchButton' type=\"submit\">\n        <svg class='IconSearch' width='18' height='18'>\n          <use href='./img/symbol-defs.svg#icon-search'></use>\n        </svg>\n      </button>\n    </form></div>\n</div>\n`;\n}\n// ==================================================================================================\n\n// це виклик функції Данила. Треба щоб він зробив експорт\nasync function onBtnClick(event) {\n  // +++++++++++++++++++++++++++++++++++++++++++++++ДОДАТИ В КОМАНДНИЙ РЕПОЗИТОРІЙ 10.02.2024\n  const titleExercises = document.querySelector('.title-exercises');\n  titleExercises.innerHTML = 'Exercises';\n  const ExercisesForm = document.querySelector('.ExercisesForm');\n  ExercisesForm.remove();\n  console.log(titleExercises);\n  // +++++++++++++++++++++++++++++++++++++++++++++++++\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  // дістаємо значення дата-атрибута елемента, на який клацнули\n  const filterValue = event.target.dataset.filter;\n  console.log(filterValue);\n  // чому робиш пустим ul при виклику функції?\n  // exerciseFiltersList.innerHTML = '';\n  try {\n    const data = await getExercise(filterValue);\n    // передаємо аргументом значення дата атрибута кнопки на яку клікнули\n    exerciseFiltersList.innerHTML = markupExercise(data);\n  } catch (error) {\n    console.log(error);\n  }\n}\n// по замовчувнню значення фільтра буде 'Muscles'\nasync function getExercise(filter = filterValueDefault) {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filter,\n        page: 1,\n        limit: 20,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// функція отримує масив об'єктів\nfunction markupExercise(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class='ExercisesItem' data-filter='${filter}' data-name='${name}'>\n        <img class=\"img-exercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div>\n          <p>${name}</p>\n          <p>${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  return markup;\n  // треба іннерhtml, щоб при кліку відбувалась заміна розмітки, а не продовження\n  // exerciseFiltersList.insertAdjacentHTML('beforeend', markup);\n}\n// --------------------------------------------------------------------------------------\n"],"names":["filterButtons","exerciseFiltersList","ExercisesHead","BASE_URL","filterValueDefault","filterBtnClick","event","qwer","getExercises","data","markupExercises","error","filter","axios","results","name","imgUrl","onCardClick","liEl","filterValue","nameValue","getExercisesByFilter","createMarkUp","updateExercisesHeaderMarkup","FilterBtn","onBtnClick","array","rating","burnedCalories","time","bodyPart","target","titleExercises","getExercise","markupExercise"],"mappings":"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"}