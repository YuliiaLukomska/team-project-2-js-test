{"version":3,"file":"commonHelpers.js","sources":["../src/exercises_filters.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst filterButtons = document.querySelector('.FilterButtons');\nconst exerciseFiltersList = document.querySelector('.ExerciseFiltersList');\nconst pagination = document.querySelector('.Pagination');\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nlet filterValueDefault = 'Muscles';\nlet currentPage = 1;\nlet screenWidth = window.innerWidth;\nlet currentLimit = 0;\n//-----------------------------------------------Слухачі------------------------------------------------------------------------\nfilterButtons.addEventListener('click', filterBtnClick);\npagination.addEventListener('click', onPaginationPages);\n//--------------------------------------------------Кількість картинок в залежності від розміру екрана---------------------------\nif (screenWidth <= 375) {\n  currentLimit = 8;\n} else if (screenWidth <= 768) {\n  currentLimit = 12;\n} else {\n  currentLimit = 12;\n}\n//---------------------------------------------------Запит на сервер-------------------------------------------------------------\nasync function getExercises() {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filterValueDefault,\n        page: currentPage,\n        limit: currentLimit,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//---------------------------------------------------Дефолтний запит для відображення Muscles при загрузці сторінки-----------------------\n\nasync function fetchDefaultApiUrl() {\n  try {\n    const response = await getExercises().then(data => {\n      const { results, totalPages, page } = data;\n      if (results && results.length > 0) {\n        markupExercises(results);\n        const pag = paginationPages(page, totalPages);\n        pagination.innerHTML = pag;\n      } else {\n        console.error('No exercises found.');\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching exercises:', error);\n  }\n}\n\n//---------------------------------------------------Виклик функцію для відображення Muscles при загрузці сторінки-----------------------\n\nfetchDefaultApiUrl();\n\n//-----------------------------------------Функція фільтрів Muscles, Body parts, Equipment--------------------------------------------\nasync function filterBtnClick(event) {\n  event.preventDefault();\n\n  currentPage = 1;\n  const filterValue = event.target;\n  const qwer = filterValue.dataset.filter;\n  filterValueDefault = qwer;\n  exerciseFiltersList.innerHTML = '';\n  Array.from(event.currentTarget.children).map(item => {\n    if (item.textContent !== event.target.textContent) {\n      item.classList.remove('ButtonIsActive');\n    } else {\n      event.target.classList.add('ButtonIsActive');\n    }\n  });\n  if (event.target.tagName !== 'BUTTON') {\n    return;\n  }\n  try {\n    getExercises(qwer).then(data => {\n      const { results, totalPages, page } = data;\n      markupExercises(results);\n      if (1) {\n        const pag = paginationPages(page, totalPages);\n        pagination.innerHTML = pag;\n      } else {\n        pagination.innerHTML = '';\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n//-----------------------------------------Функція перехід по сторінкам------------------------------------------------------\n\nasync function onPaginationPages(e) {\n  currentPage = e.target.textContent;\n  Array.from(e.currentTarget.children).map(item => {\n    if (item.textContent !== currentPage) {\n      item.classList.remove('PaginationBtnIsActive');\n    } else {\n      e.target.classList.add('PaginationBtnIsActive');\n    }\n  });\n  exerciseFiltersList.innerHTML = '';\n  try {\n    const { results, page, totalPages } = await getExercises();\n    if (page === totalPages) {\n      return;\n    }\n\n    markupExercises(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//---------------------------------------------------Розмітка Muscles, Body parts, Equipment--------------------------------------------\n\nfunction markupExercises(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class=\"FilterList ExercisesItem\" data-filter='${filter}' data-name='${name}'>\n        <img class=\"ImgExercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div class=\"FilterText\">\n          <p class=\"FilterExercises\">${name}</p>\n          <p class=\"FilterName\">${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  exerciseFiltersList.insertAdjacentHTML('beforeend', markup);\n}\n//---------------------------------------------------Розмітка номерів сторінки--------------------------------------------\n\nfunction paginationPages(page, totalPages) {\n  let paginationHtml = '';\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    paginationHtml += `<button class=\"PaginationBtn PaginationBtnIsActive\" type=\"button\">${i}</button>`;\n  }\n  return paginationHtml;\n}\n\nexport { onPaginationPages };\n","import axios from 'axios';\nimport { onPaginationPages } from './exercises_filters';\n\nconst exerciseFiltersList = document.querySelector('.ExerciseFiltersList');\nconst ExercisesHead = document.querySelector('.ExercisesHead');\nconst pagination = document.querySelector('.Pagination');\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nlet currentPage = 1;\nlet filterValue;\nlet nameValue;\n\nexerciseFiltersList.addEventListener('click', onCardClick);\n\nasync function onCardClick(event) {\n  exerciseFiltersList.removeEventListener('click', onCardClick);\n  exerciseFiltersList.classList.add('ExerciseCategoryList');\n  pagination.removeEventListener('click', onPaginationPages);\n  pagination.removeEventListener('click', onPaginationPagesbyFilter);\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  exerciseFiltersList.classList.add('ExerciseCategoryList'); // при кліку на картку додаємо клас до ul (бо він має інші стилі)\n  const liEl = event.target.closest('.ExercisesItem'); // при кліку на картку шукаємо найближчий елемент у якого буде заданий селектор (це li)\n  filterValue = liEl.dataset.filter; //Muscles   // тепер можемо отримати li дата-атрибути\n  nameValue = liEl.dataset.name; // abductors\n\n  try {\n    ExercisesHead.innerHTML = updateExercisesHeaderMarkup(nameValue); // оновлюємо хедер секції Exercises\n    const { totalPages, results } = await getExercisesByFilter(\n      filterValue,\n      nameValue\n    );\n    exerciseFiltersList.innerHTML = createMarkUp(results); // це буде масив об'єктів\n    const StartBtn = document.querySelector('.StartBtn');\n    // треба імпортувати функцію onStartBtnClick -------\n    // StartBtn.addEventListener('click', onStartBtnClick)\n\n    // ------------------------------new КОД ДЛЯ ДЕНИСА --- ПОМИЛКА--- ПОКИ КОМЕНТУЮ---------------------------------------\n    // const ExercisesForm = document.querySelector('.ExercisesForm');\n    // ExercisesForm.addEventListener(\n    //   'submit',\n    //   onFormSubmit(filterValue, nameValue)\n    // );\n\n    // // Определяем асинхронную функцию onFormSubmit. Функция принимает объект запроса query\n    // async function onFormSubmit(query) {\n    //   try {\n    //     // Выполняем GET-запрос к API с передачей параметров запроса. Результат запроса сохраняем в переменной response\n    //     const response = await axios.get(`${BASE_URL}`, {\n    //       params: {\n    //         bodypart: '',\n    //         muscles: '',\n    //         equipment: '',\n    //         keyword: query.query, // эти значения из queryParams\n    //         page: query.page,\n    //         limit: 9,\n    //       },\n    //     });\n    //     // Вызываем функцию renderExercises с передачей массива упражнений из ответа\n    //     renderExercises(response.data.results);\n    //   } catch (error) {\n    //     handleError(error); // Вывод ошибки в консоль при возникновении ошибки запроса\n    //   }\n    // }\n\n    // -------------------------------new  КОД ДЛЯ ДЕНИСА --- ПОМИЛКА--- ПОКИ КОМЕНТУЮ--------------------------------------\n\n    const FilterBtn = document.querySelector('#FilterBtn'); // додаємо на три кнопки фільтрів слухача по кліку\n    FilterBtn.addEventListener('click', onBtnClick);\n    FilterBtn.addEventListener('click', onBtnClickForFormDelete);\n    pagination.innerHTML = ''; // пагінація\n    if (totalPages > 1) {\n      const pag = paginationPages(totalPages); // const pag це буде рядок розмітки кнопок(нумерація сторінок)\n      pagination.innerHTML = pag; // додаємо в div розмітку сторінок\n    }\n    pagination.addEventListener('click', onPaginationPage); // вішаємо на дів з кнопками нумерації сторінок слухача подій при кліку\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction onBtnClickForFormDelete() {\n  const ExercisesForm = document.querySelector('.ExercisesForm');\n  // ???vформа видаляється при першому кліку, а при другому знову хоче видалити, а її вже нема\n  ExercisesForm.remove();\n  FilterBtn.removeEventListener('click', onBtnClickForFormDelete);\n}\n\nasync function getExercisesByFilter(filterValue, nameValue, currentPage) {\n  // в запиті можливі три ключі, тому відповідно до значення фільтра пишемо цей ключ\n  try {\n    if (filterValue === 'Muscles') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          muscles: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    } else if (filterValue === 'Body parts') {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          bodypart: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    } else {\n      const response = await axios.get(`${BASE_URL}/exercises`, {\n        params: {\n          equipment: nameValue,\n          page: currentPage,\n          limit: 9,\n        },\n      });\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createMarkUp(array) {\n  const markup = array\n    .map(({ rating, name, burnedCalories, time, bodyPart, target, _id }) => {\n      return `<li class=\"WorkoutCard\">\n      <div class='CardHeader'>\n        <div class='WorkoutWrapper'>\n          <p class='Workout'>workout</p>\n          <div class='RatingWrapper'><p>${rating}</p>\n          <svg class='StarIcon' width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-star'></use>\n        </svg></div>\n        </div>\n        <div class='StartBtn' data-id='${_id}'>\n          <p>Start</p>\n          <svg width='13' height='13'>\n          <use href='./img/symbol-defs.svg#icon-arrow'></use>\n        </svg>\n        </div>\n      </div>\n      <div class='CardMainPart'>\n      <div class='RunIconWrapper'><svg width='14' height='14'>\n          <use href='./img/symbol-defs.svg#icon-running'></use>\n        </svg></div>\n        <p class='MainPartName'>${name}</p>\n      </div>\n      <ul class=\"CardFooter\">\n        <li>\n          <p class='CardFooterTextDescr'>Burned calories: <span class='CardFooterTextValue'>${burnedCalories} / ${time} min</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Body part: <span class='CardFooterTextValue'>${bodyPart}</span></p>\n        </li>\n        <li>\n          <p class='CardFooterTextDescr'>Target: <span class='CardFooterTextValue'>${target}</span></p>\n        </li>\n      </ul>\n\n    </li>`;\n    })\n    .join('');\n  return markup;\n}\n\nfunction updateExercisesHeaderMarkup(nameValue) {\n  return `<div>\n  <h2 class=\"TitleExercises\">Exercises / <span class=\"NameValue\"> ${nameValue}</span></h2>\n  <div class=\"ExercisesHeared\">\n  <div class=\"ListExercises FilterButtons\" id='FilterBtn'>\n    <button class=\"ItemExercises\" data-filter=\"Muscles\" id='MusclesBtn'>Muscles</button>\n    <button class=\"ItemExercises\" data-filter=\"Body parts\" id='BodyPartBtn'>Body parts</button>\n    <button class=\"ItemExercises\" data-filter=\"Equipment\" id='EquipmentBtn'>Equipment</button>\n  </div>\n    <form action=\"\" class=\"ExercisesForm\">\n      <label for=\"#search\" class=\"visually-hidden\">Search</label>\n      <input class='SearchInput' name=\"search\" placeholder=\"Search\" type=\"search\" id=\"search\" />\n      <button class='SearchButton' type=\"submit\">\n        <svg class='IconSearch' width='18' height='18'>\n          <use href='./img/symbol-defs.svg#icon-search'></use>\n        </svg>\n      </button>\n    </form></div>\n</div>\n`;\n}\n\n// це виклик функції Данила. Треба щоб він зробив експорт\n// функція, яка спрацьовує коли ми клікаємо по фільтру (Muscle, Body Part, Equipment) і повертаємось назад\nasync function onBtnClick(event) {\n  exerciseFiltersList.addEventListener('click', onCardClick);\n  exerciseFiltersList.classList.remove('ExerciseCategoryList');\n  currentPage = 1; // робимо поточну сторінку першою\n  pagination.removeEventListener('click', onPaginationPage); // видаляємо з нумерації сторінок слухача попереднього\n  Array.from(event.currentTarget.children).map(item => {\n    if (item.textContent !== event.target.textContent) {\n      item.classList.remove('ButtonIsActive');\n    } else {\n      event.target.classList.add('ButtonIsActive');\n    }\n  });\n  if (event.target === event.currentTarget) {\n    return;\n  }\n  filterValue = event.target.dataset.filter; // дістаємо значення дата-атрибута елемента, на який клацнули\n  try {\n    const { totalPages, results } = await getExercise(filterValue);\n    exerciseFiltersList.innerHTML = markupExercise(results); // робимо розмітку всередині ul по фільтру починаюxи з першої сторінки\n    if (totalPages > 1) {\n      const pag = paginationPages(totalPages);\n      pagination.innerHTML = pag;\n    } else {\n      pagination.innerHTML = '';\n    }\n    pagination.addEventListener('click', onPaginationPagesbyFilter);\n    // тут видалення тексту після слеша та форми\n    const titleExercises = document.querySelector('.TitleExercises');\n    titleExercises.innerHTML = 'Exercises';\n    // ------------------------------------------\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getExercise(filter = filterValueDefault) {\n  try {\n    const response = await axios.get(`${BASE_URL}/filters`, {\n      params: {\n        filter: filter,\n        page: currentPage,\n        limit: 12,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction markupExercise(results) {\n  const markup = results\n    .map(\n      ({\n        name,\n        filter,\n        imgUrl,\n      }) => ` <li class='FilterList ExercisesItem' data-filter='${filter}' data-name='${name}'>\n        <img class=\"ImgExercises\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div class=\"FilterText\">\n          <p class=\"FilterExercises\">${name}</p>\n          <p class=\"FilterName\">${filter}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n  return markup;\n}\n// ---------------------------------------------------ПАГІНАЦІЯ------------------------------------------------------------\nfunction paginationPages(totalPages) {\n  let paginationHtml = '';\n  for (let i = 1; i <= totalPages; i += 1) {\n    paginationHtml += `<button class=\"pagination-btn\" type=\"button\">${i}</button>`;\n  }\n\n  return paginationHtml; // в залежності від к-ті сторінок повертає таку кількість кнопок в розмітці\n}\n\nasync function onPaginationPage(e) {\n  currentPage = e.target.textContent; // при кліку на цифру сторінки будемо діставати цифру (текст-контент кнопки: 1, 4, 7...)\n  try {\n    // запит на картки по фільтру\n    const { results } = await getExercisesByFilter(\n      filterValue,\n      nameValue,\n      currentPage\n    );\n    exerciseFiltersList.innerHTML = createMarkUp(results); // робимо розмітку підкатегорій відповідно до номеру сторінки\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// вішаємо слухач на дів з цифрами сторінок\n\nasync function onPaginationPagesbyFilter(e) {\n  currentPage = e.target.textContent;\n  try {\n    // запит на картки по фільтру\n    const { results } = await getExercise(filterValue, currentPage);\n    exerciseFiltersList.innerHTML = markupExercise(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { createMarkUp };\n\n// Импорт необходимых библиотек\n"],"names":["filterButtons","exerciseFiltersList","pagination","BASE_URL","filterValueDefault","currentPage","screenWidth","currentLimit","filterBtnClick","onPaginationPages","getExercises","axios","error","fetchDefaultApiUrl","response","data","results","totalPages","page","markupExercises","pag","paginationPages","event","qwer","item","markup","name","filter","imgUrl","paginationHtml","i","ExercisesHead","filterValue","nameValue","onCardClick","onPaginationPagesbyFilter","liEl","updateExercisesHeaderMarkup","getExercisesByFilter","createMarkUp","StartBtn","FilterBtn","onBtnClick","onBtnClickForFormDelete","onPaginationPage","array","rating","burnedCalories","time","bodyPart","target","_id","getExercise","markupExercise","titleExercises"],"mappings":"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"}